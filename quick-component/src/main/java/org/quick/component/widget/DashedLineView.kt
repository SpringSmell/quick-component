package org.quick.component.widgetimport android.annotation.SuppressLintimport android.content.Contextimport android.graphics.Canvasimport android.graphics.Colorimport android.graphics.DashPathEffectimport android.graphics.Paintimport android.graphics.Pathimport android.util.AttributeSetimport android.view.Viewimport org.quick.component.R/** * 虚线 * * Created by Administrator on 2016/8/1. * @author chrisZou * @from https://github.com/SpringSmell/quick.library * @email chrisSpringSmell@gmail.com */class DashedLineView(context: Context, attrs: AttributeSet) : View(context, attrs) {    private var dashLineColor: Int    private var dashLineHeight: Float    private var dashLineWidth: Float    private var paint = Paint()    private var orientation = 0x1    enum class Orientation(var value: Int) {        HORIZONTAL(0x1), VERTICAL(0x2)    }    init {        val ta = context.obtainStyledAttributes(attrs, R.styleable.DashedLineView)        dashLineColor = ta.getColor(R.styleable.DashedLineView_dashLineColor, Color.DKGRAY)        dashLineHeight = ta.getDimension(R.styleable.DashedLineView_dashLineHeight, -1f)        dashLineWidth = ta.getDimension(R.styleable.DashedLineView_dashLineWidth, -1f)        orientation = ta.getInt(R.styleable.DashedLineView_orientation, Orientation.HORIZONTAL.value)        ta.recycle()        paint.style = Paint.Style.STROKE        paint.color = dashLineColor        paint.isAntiAlias = true    }    @SuppressLint("DrawAllocation")    override fun onDraw(canvas: Canvas) {        super.onDraw(canvas)        val path = Path()        paint.pathEffect =                if (orientation == Orientation.HORIZONTAL.value) {                    if (dashLineWidth == -1f) dashLineWidth = 40f                    if (dashLineHeight == -1f) dashLineHeight = height.toFloat()                    paint.strokeWidth = dashLineHeight                    path.moveTo(0f, height / 2f)                    path.lineTo(width.toFloat(), height / 2f)                    DashPathEffect(floatArrayOf(dashLineWidth, dashLineWidth, dashLineWidth, dashLineWidth), 0f)                } else {                    if (dashLineWidth == -1f) dashLineWidth = width.toFloat()                    if (dashLineHeight == -1f) dashLineHeight = 40f                    paint.strokeWidth = dashLineWidth                    path.moveTo(width / 2f, 0f)                    path.lineTo(width / 2f, height.toFloat())                    DashPathEffect(floatArrayOf(dashLineHeight, dashLineHeight, dashLineHeight, dashLineHeight), 0f)                }        canvas.drawPath(path, paint)        path.reset()        path.close()    }}